apiVersion: v1
kind: Template
metadata:
  name: kafkanetes-deploy-kafka-1
  annotations:
    description: 1-pod Kafka
    tags: messaging,kafka

parameters:
- name: VOLUME_CAPACITY
  description: Persistent volume capacity per pod, e.g. 512Mi, 2Gi
  required: true
  value: 512Mi
- name: OBJECT_NAME_PREFIX
  description: Name prefix for each object created
  required: true
  value: kafkanetes-kafka
- name: ZOOKEEPER_SERVICE
  description: DNS name of ZooKeeper service
  required: true
  value: kafkanetes-zk

objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${OBJECT_NAME_PREFIX}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${OBJECT_NAME_PREFIX}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}
    template:
      metadata:
        labels:
          deploymentconfig: ${OBJECT_NAME_PREFIX}
      spec:
        containers:
        - name: kafkanetes
          image: kafka
          imagePullPolicy: IfNotPresent
          command:
          - bin/kafka-server-start.sh
          args:
          - config/server.properties
          - --override
          - zookeeper.connect=${ZOOKEEPER_SERVICE}
          - --override
          - advertised.host.name=${OBJECT_NAME_PREFIX}
          volumeMounts:
          - mountPath: /tmp/kafka-logs
            name: kafka-logs
          ports:
          - containerPort: 9092
        volumes:
        - name: kafka-logs
          persistentVolumeClaim:
            claimName: ${OBJECT_NAME_PREFIX}
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    name: ${OBJECT_NAME_PREFIX}
  spec:
    ports:
    - port: 9092
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}
